import os

from aiogram import types, Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext


from .utils import Storage
form_router = Router()

# –û—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° üì®


@form_router.message(F.text.casefold() == '—Ç–µ—Å—Ç')
async def message_ls(message: types.Message, state: FSMContext):
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–ª–∏ —Å–ª–æ–≤–æ –í–°–ï–ú –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        # reply_markup=ReplyKeyboardRemove(),
    )
    await state.set_state(Storage.id_or_all)


# @form_router.message('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
@form_router.message(F.text.casefold() == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô')
async def to_menu(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "Cancelled.",
        # reply_markup=ReplyKeyboardRemove(),
    )


@form_router.message(Storage.id_or_all)
async def input_mesage(message: types.Message, state: FSMContext):
    await state.update_data(message=message.text)
    await state.set_state(Storage.message)
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',
        # reply_markup=ReplyKeyboardMarkup(...
        #     resize_keyboard=True,
        # ),
    )


@form_router.message(Storage.message)
async def input_confirmation(message: types.Message, state: FSMContext):
    await state.update_data(confirmation=message.text)
    await state.set_state(Storage.confirmation)
    await message.answer(
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É',
        # reply_markup=ReplyKeyboardMarkup(...
        #     resize_keyboard=True,
        # ),
    )


async def end_message_ls(message: types.Message, data):
    text = data['text']
    await message.answer(text=text)

